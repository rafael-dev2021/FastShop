name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Verify SonarCloud Configuration
        shell: powershell
        run: Write-Output "SonarCloud configuration verified."

      - name: SonarCloud - Begin Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"rafael-dev2021_FastShop" /o:"rafael-dev2021" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="TestResults/**/*.opencover.xml"

      - name: Build project
        shell: powershell
        run: dotnet build --configuration Release

      - name: Run tests and collect coverage
        shell: powershell
        run: |
          dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover --results-directory ./TestResults

      - name: Verify Coverage Report
        shell: powershell
        run: |
          Write-Output "Verificando arquivos no diret처rio ./TestResults"
          Get-ChildItem -Path ./TestResults -Recurse
          $coverageReport = Get-ChildItem -Path ./TestResults -Recurse -Filter "*.opencover.xml" | Select-Object -First 1
          if ($coverageReport) {
            Write-Output "Relat처rio de cobertura encontrado: $coverageReport.FullName"
          } else {
            Write-Error "Relat처rio de cobertura n찾o encontrado."
            exit 1
          }

      - name: SonarCloud - End Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
